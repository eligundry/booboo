<?php
namespace BooBoo\MyBooBoos;

use HTTP\HTTP;
use HTTP\response\ContentType;
use HTTP\response\Status;

abstract class MyBooBoos {

	protected $message;

	abstract protected function getTEXT();
	abstract protected function getHTML();
	abstract protected function getXML();
	abstract protected function getJSON();
	abstract public function getTag();

	/**
	 * @param int $statusCode [HTTP error code to return]
	 * @param String  $message    [Message to be used in the logs. Advice: use defined 
	 *                            constants or exception messages generated by the application.]
	 */
	public function __construct($message) {
		$this->message = $message;
	}

	public function printErrorMessage($contentType) {
		switch($contentType) {
			case ContentType::TEXT:
				return $this->getTEXT();
				break;
			case ContentType::HTML:
				return $this->getHTML();
				break;
			case ContentType::XML:
				return $this->getXML();
				break;
			case ContentType::JSON:
				return $this->getJSON();
				break;
		}
	}	

	public function __toString() {
		return $this->getTag();
	}

	protected function getContents($file, $data = null) {
		ob_start();
		include($file);
		$buffer = ob_get_contents();
		ob_end_clean();
		return $buffer;
	}

	public function getMessage() {
		return $this->message;
	}
}
